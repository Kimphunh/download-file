name: Download File and Release

on:
  workflow_dispatch:
    inputs:
      file_url:
        description: 'URL của file cần tải'
        required: true
        default: ''
      file_name:
        description: 'Tên lưu file đã tải (để trống để sử dụng tên file gốc từ URL)'
        required: false
        default: ''

jobs:
  download_and_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Git
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'

      - name: Identify file name
        id: identify_file_name
        run: |
          FILE_URL="${{ github.event.inputs.file_url }}"
          FILE_NAME="${{ github.event.inputs.file_name }}"
          if [ -z "$FILE_NAME" ]; then
            # Cố gắng lấy tên file từ header response khi download
            FILE_NAME=$(curl -sI "$FILE_URL" | grep -o -E 'filename=.*$' | sed -e 's/filename=//')
            if [ -z "$FILE_NAME" ]; then
              # Lấy tên file từ URL nếu không có header
              FILE_NAME=$(basename "$FILE_URL")
              if [[ ${#FILE_NAME} -gt 50 || ! "$FILE_NAME" == *.* ]]; then
                FILE_NAME="temp.file"
                echo "Không lấy được tên file từ URL hoặc header." >> $GITHUB_ENV
              fi
            fi
          fi
          echo "FILE_NAME=$FILE_NAME" >> $GITHUB_ENV
          echo "::set-output name=file_name::$FILE_NAME"

      - name: Download file
        run: wget "${{ github.event.inputs.file_url }}" -O "${{ env.FILE_NAME }}"

      - name: Final file rename
        if: ${{ github.event.inputs.file_name }}
        run: |
          FILE_NAME="${{ github.event.inputs.file_name }}"
          FILE_EXTENSION="${{ steps.identify_file_name.outputs.file_extension }}"
          # Kiểm tra xem tên thay thế có phần mở rộng hay không
          if [[ "$FILE_NAME" == *.* ]]; then
            mv "${{ env.FILE_NAME }}" "$FILE_NAME"
          else
            mv "${{ env.FILE_NAME }}" "${FILE_NAME}.${FILE_EXTENSION}"
          fi

      - name: Determine new release version
        id: determine_release_version
        run: echo "::set-output name=release_version::v1.0.$(( ${{ github.run_number }} + 1 ))"

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.determine_release_version.outputs.release_version }}
          release_name: Release ${{ steps.determine_release_version.outputs.release_version }}
          body: |
            File URL: ${{ github.event.inputs.file_url }}
            ${{ env.NOTIFY_MESSAGE }}
          draft: false
          prerelease: false

      - name: Upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/${{ env.FILE_NAME }}
          asset_name: ${{ env.FILE_NAME }}
          asset_content_type: application/octet-stream
          
