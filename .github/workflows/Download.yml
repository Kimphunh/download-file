name: Download File and Release

on:
  workflow_dispatch:
    inputs:
      file_url:
        description: 'URL of the file to be downloaded'
        required: true
      file_name:
        description: 'Custom file name (leave empty to use the original file name from the URL)'
        required: false
        default: ''

jobs:
  download_and_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Git
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'

      - name: Identify file name and extension
        id: identify_file
        run: |
          FILE_URL="${{ github.event.inputs.file_url }}"
          # Send a request to the URL and parse the response to get the file name
          response=$(curl -sI "$FILE_URL")
          
          # Extract the file name from the response
          FILE_NAME=$(echo "$response" | grep -o -E 'filename=.*$' | sed -e 's/filename=//' | tr -d '\r\n' | sed -e 's/^"//' -e 's/"$//' )
          
          # Check if the file name is empty
          if [ -z "$FILE_NAME" ]; then
            # If empty, use the basename of the URL as the file name
            FILE_NAME=$(basename "$FILE_URL")
            # Log an error if the file name is longer than 50 characters or doesn't contain a file extension
            if [[ ${#FILE_NAME} -gt 50 || ! "$FILE_NAME" == *.* ]]; then
              FILE_NAME="file.temp"
              echo "Could not get the file name from the URL or header."
            fi
          fi
          
          # Set the file name and extension as environment variables
          echo "FILE_NAME=$FILE_NAME" >> $GITHUB_ENV
          echo "FILE_EXTENSION=$(basename "$FILE_NAME" | rev | cut -d. -f1 | rev)" >> $GITHUB_ENV

      - name: Download file
        run: |
          wget "${{ github.event.inputs.file_url }}" -O "$FILE_NAME"

      - name: Rename file if necessary
        if: ${{ github.event.inputs.file_name != '' }}
        run: |
          mv "$FILE_NAME" "${{ github.event.inputs.file_name }}"
          echo "FILE_NAME=${{ github.event.inputs.file_name }}" >> $GITHUB_ENV

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.2.${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          body: |
            File URL: ${{ github.event.inputs.file_url }}
            ERROR_MSG=""
             if [[ "$FILE_NAME" == "file.temp" ]]; then
              ERROR_MSG="Lỗi: Không thể lấy tên tệp và phần mở rộng từ server."
             fi
          draft: false
          prerelease: false
          
      - name: Upload release asset
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/${{ env.FILE_NAME }}
          asset_name: ${{ env.FILE_NAME }}
          asset_content_type: application/octet-stream
