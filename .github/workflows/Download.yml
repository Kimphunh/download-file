
name: Download File and Release

on:
  workflow_dispatch:
    inputs:
      file_url:
        description: 'URL of the file to download'
        required: true
      file_name:
        description: 'Save file name (leave blank to use original file name from URL)'
        required: false
        default: ''

jobs:
  download_and_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Git
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'

      - name: Download file and extract information
        id: download_and_extract
        uses: actions/download-artifact@v3
        with:
          url: ${{ github.event.inputs.file_url }}
          # You can optionally specify a file name here
          # if you want to override the default name
          # file_name: 'my_downloaded_file.txt' 
        
      - name: Rename file if necessary
        id: rename_file
        run: |
          desired_file_name="${{ github.event.inputs.file_name }}"
          downloaded_file_name="${{ steps.download_and_extract.outputs.file_name }}"
          if [ -z "$desired_file_name" ]; then
            desired_file_name="$downloaded_file_name"
          fi
          mv "$downloaded_file_name" "$desired_file_name"
          echo "FINAL_FILE_NAME=$desired_file_name" >> $GITHUB_STATE

      - name: Determine new release version
        run: echo "release_version=v1.2.$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV

      - name: Create release
        id: create_release
        uses: actions/create-release@v1.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_PAT }}
        with:
          tag_name: ${{ env.release_version }}
          release_name: Release ${{ env.release_version }}
          body: |
            File URL: ${{ github.event.inputs.file_url }}
            !File Preview
          draft: false
          prerelease: false

      - name: Upload release asset
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_PAT }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/$(cat $GITHUB_STATE | grep FINAL_FILE_NAME | cut -d '=' -f2)
          asset_name: $(cat $GITHUB_STATE | grep FINAL_FILE_NAME | cut -d '=' -f2)
          asset_content_type: application/octet-stream

      - name: Update release notes with preview
        run: |
          ASSET_URL=$(jq --raw-output '.browser_download_url' <<< "${{ steps.upload_release_asset.outputs }}")
          FILE_EXTENSION="${{ steps.download_and_extract.outputs.file_extension }}"
          if [[ "$FILE_EXTENSION" =~ ^(jpg|png|gif)$ ]]; then
            PREVIEW_TEXT="![Image Preview]($ASSET_URL)"
          elif [[ "$FILE_EXTENSION" =~ ^(mp3|wav)$ ]]; then
            PREVIEW_TEXT="[Listen to Audio]($ASSET_URL)"
          elif [[ "$FILE_EXTENSION" =~ ^(mp4|avi)$ ]]; then
            PREVIEW_TEXT="[Watch Video]($ASSET_URL)"
          else
            PREVIEW_TEXT="File URL: $ASSET_URL"
          fi
          gh release edit "${{ env.release_version }}" --add "$PREVIEW_TEXT"
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_PAT }}
          
