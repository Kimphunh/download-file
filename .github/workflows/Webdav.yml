name: Remote Upload Workflow

on:
  workflow_dispatch:
    inputs:
      url:
        description: 'Nhập URL cần tải xuống'
        required: true

jobs:
  upload:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Đọc thông tin WebDAV từ tệp
      run: |
        WEBDAV_URL=$(cat webdav_info.txt | grep URL | cut -d '=' -f2)
        WEBDAV_USERNAME=$(cat webdav_info.txt | grep USERNAME | cut -d '=' -f2)
        WEBDAV_PASSWORD=$(cat webdav_info.txt | grep PASSWORD | cut -d '=' -f2)
        echo "WEBDAV_URL=$WEBDAV_URL" >> $GITHUB_ENV
        echo "WEBDAV_USERNAME=$WEBDAV_USERNAME" >> $GITHUB_ENV
        echo "WEBDAV_PASSWORD=$WEBDAV_PASSWORD" >> $GITHUB_ENV

    - name: Cài đặt yt-dlp
      run: |
        curl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp -o yt-dlp
        chmod a+rx yt-dlp

    - name: Xác định loại URL và tải xuống
      id: download
      run: |
        if [[ ${{ github.event.inputs.url }} == *"music.youtube.com"* ]]; then
          FORMAT="bestaudio"
        elif [[ ${{ github.event.inputs.url }} == *"youtube.com"* ]]; then
          FORMAT="bestvideo+bestaudio"
        fi

        if [[ ${{ github.event.inputs.url }} == *"/playlist?"* ]]; then
          PLAYLIST_NAME=$(./yt-dlp --get-filename -o "%(playlist)s" ${{ github.event.inputs.url }})
          mkdir $PLAYLIST_NAME
          ./yt-dlp -f $FORMAT -o "$PLAYLIST_NAME/%(title)s.%(ext)s" ${{ github.event.inputs.url }}
          echo "::set-output name=downloaded_item::$PLAYLIST_NAME"
        else
          FILE_NAME=$(./yt-dlp --get-filename -o "%(title)s.%(ext)s" ${{ github.event.inputs.url }})
          ./yt-dlp -f $FORMAT --extractor-args "youtube:player_client=android" -o "$FILE_NAME" ${{ github.event.inputs.url }}
          echo "::set-output name=downloaded_item::$FILE_NAME"
        fi

    - name: Upload lên WebDAV
      run: |
        DOWNLOAD_ITEM=${{ steps.download.outputs.downloaded_item }}
        WEBDAV_PATH=$WEBDAV_URL
        if [ -d "$DOWNLOAD_ITEM" ]; then
          for FILE in "$DOWNLOAD_ITEM"/*; do
            curl -T "$FILE" -u $WEBDAV_USERNAME:$WEBDAV_PASSWORD "$WEBDAV_PATH/$DOWNLOAD_ITEM/"
          done
        elif [ -f "$DOWNLOAD_ITEM" ]; then
          curl -T "$DOWNLOAD_ITEM" -u $WEBDAV_USERNAME:$WEBDAV_PASSWORD "$WEBDAV_PATH/"
        else
          echo "Không có tệp hoặc thư mục nào để tải lên"
        fi

    - name: Dọn dẹp
      run: rm -rf "$DOWNLOAD_ITEM"

    - name: Dọn dẹp
      run: rm -rf $PLAYLIST_NAME file
      
