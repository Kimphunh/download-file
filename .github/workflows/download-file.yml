name: Download File and Release

on:
  workflow_dispatch:
    inputs:
      file_url:
        description: 'URL of the file to download'
        required: true
        default: ''
      file_name:
        description: 'Name to save the downloaded file as (leave blank to use original filename from URL)'
        required: false
        default: ''

jobs:
  download_and_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Git
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'

      - name: Determine file name
        id: file_name
        run: |
          FILE_URL="${{ github.event.inputs.file_url }}"
          FILE_NAME=$(basename "${FILE_URL}")
          if [[ ${#FILE_NAME} -gt 50 || ! "${FILE_NAME}" =~ .*\..* ]]; then
            FILE_NAME=$(curl -sI "${FILE_URL}" | grep -o -E 'filename=.*$' | sed -e 's/filename=//')
            if [[ -z "$FILE_NAME" ]]; then
              FILE_NAME="file.temp"
            fi
          fi
          echo "::set-output name=file_name::$FILE_NAME"

      - name: Download file
        run: wget "${{ github.event.inputs.file_url }}" -O "${{ github.event.inputs.file_name || steps.file_name.outputs.file_name }}"

      - name: Finalize file name
        if: ${{ github.event.inputs.file_name }}
        run: |
          FILE_EXTENSION="${{ steps.file_name.outputs.file_name | awk -F . '{print $NF}' }}"
          FINAL_NAME="${{ github.event.inputs.file_name }}.$FILE_EXTENSION"
          mv "${{ steps.file_name.outputs.file_name }}" "$FINAL_NAME"
          echo "Renamed file to $FINAL_NAME"

      - name: Determine new release version
        id: determine_release_version
        run: echo "::set-output name=release_version::v1.0.$(( ${{ github.run_number }} + 1 ))"

      - name: Create release notes
        id: create_release_notes
        run: |
          FILE_URL="${{ github.event.inputs.file_url }}"
          FILE_NAME="${{ github.event.inputs.file_name || steps.file_name.outputs.file_name }}"
          ERROR_MSG=""
          
          if [[ $FILE_NAME == "file.temp" ]]; then
            ERROR_MSG="Lỗi: Không thể lấy tên tệp từ server."
          fi
          
          echo "::set-output name=release_notes::File URL: ${FILE_URL}<br>${ERROR_MSG}"

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.determine_release_version.outputs.release_version }}
          release_name: Release ${{ steps.determine_release_version.outputs.release_version }}
          body: ${{ steps.create_release_notes.outputs.release_notes }}
          draft: false
          prerelease: false

      - name: Upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/${{ steps.file_name.outputs.file_name }}
          asset_name: ${{ steps.file_name.outputs.file_name }}
          asset_content_type: application/octet-stream

      - name: Cleanup
        run: |
          rm -f .gitattributes
          git rm .gitattributes
          git commit -m "Remove .gitattributes" || echo "No changes to commit"
          git push
