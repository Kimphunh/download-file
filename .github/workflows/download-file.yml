name: Download File and Release

on:
  workflow_dispatch:
    inputs:
      file_url:
        description: 'URL of the file to download'
        required: true
        default: ''
      file_name:
        description: 'Name to save the downloaded file as'
        required: true
        default: ''

jobs:
  download_and_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true

      - name: Set up Git
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'

      - name: Setup Git LFS
        run: |
          git lfs install
          git lfs track "${{ github.event.inputs.file_name }}"
          git add .gitattributes
          git commit -m "Setup Git LFS"
          git push

      - name: Download file
        run: |
          file_url="${{ github.event.inputs.file_url }}"
          file_name=$(curl -sI "$file_url" | grep -i "^Content-Disposition" | sed -r 's/^.*filename=([^;]+).*$/\1/' | tr -d '"')
          curl -L -o "$file_name" -O -J "$file_url"
          mv "$file_name" "${{ github.event.inputs.file_name }}"

      - name: Determine new release version
        id: determine_release_version
        run: echo "::set-output name=release_version::v1.0.$(( ${{ github.run_number }} + 1 ))"

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.determine_release_version.outputs.release_version }}
          release_name: Release ${{ steps.determine_release_version.outputs.release_version }}
          draft: false
          prerelease: false

      - name: Upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/${{ github.event.inputs.file_name }}
          asset_name: ${{ github.event.inputs.file_name }}
          asset_content_type: application/octet-stream
