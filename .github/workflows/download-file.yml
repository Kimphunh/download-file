name: Download File and Release

on:
  workflow_dispatch:
    inputs:
      file_url:
        description: 'URL of the file to download'
        required: true
        default: ''
      file_name:
        description: 'Name to save the downloaded file as'
        required: true
        default: ''

jobs:
  download_and_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true

      - name: Set up Git
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git lfs install

      - name: Determine file extension and download
        id: download_file
        run: |
          file_url="${{ github.event.inputs.file_url }}"
          file_name="${{ github.event.inputs.file_name }}"

          # Get the file extension from the URL
          wget --content-disposition --trust-server-names -O temp_file "${file_url}"
          actual_file_name=$(basename "$(realpath temp_file)")
          file_extension="${actual_file_name##*.}"
          
          # Rename the file to the desired file name with correct extension
          mv temp_file "${file_name}.${file_extension}"
          echo "file_extension=${file_extension}" >> $GITHUB_ENV
        shell: bash

      - name: Determine new release version
        id: determine_release_version
        run: echo "release_version=v1.0.$(( ${{ github.run_number }} + 1 ))" >> $GITHUB_ENV

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.release_version }}
          release_name: Release ${{ env.release_version }}
          draft: false
          prerelease: false

      - name: Upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/${{ github.event.inputs.file_name }}.${{ env.file_extension }}
          asset_name: ${{ github.event.inputs.file_name }}.${{ env.file_extension }}
          asset_content_type: application/octet-stream
