name: Download File and Rename

on:
  workflow_dispatch:
    inputs:
      file_url:
        description: 'URL of the file to download'
        required: true
        default: ''
      new_file_name:
        description: 'New name for the downloaded file without extension (leave empty to use original name)'
        required: false
        default: ''

jobs:
  download_and_rename:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true

      - name: Set up Git
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git lfs install

      - name: Download and rename file
        run: |
          wget -q "${{ github.event.inputs.file_url }}" -O temp_file
          if [ -z "${{ github.event.inputs.new_file_name }}" ]; then
            file_name=$(basename "${{ github.event.inputs.file_url }}")
          else
            file_extension=$(basename temp_file | sed 's/.*\.//')
            file_name="${{ github.event.inputs.new_file_name }}.${file_extension}"
          fi
          mv temp_file "$file_name"

      - name: Determine new release version
        id: determine_release_version
        run: echo "::set-output name=release_version::v1.0.$(( ${{ github.run_number }} + 1 ))"

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.determine_release_version.outputs.release_version }}
          release_name: Release ${{ steps.determine_release_version.outputs.release_version }}
          draft: false
          prerelease: false

      - name: Upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/$file_name
          asset_name: "$file_name"
          asset_content_type: application/octet-stream
          
